.timeline-wrapper {
  position: relative;
  width: 100%;
  padding: 20px 0;
}

.timeline-steps {
  display: flex;
  justify-content: space-around;
  z-index: 1;
  position: relative;
}

/* Tạo line tự động từ icon đầu đến icon cuối */
.timeline-steps::before {
  content: '';
  position: absolute;
  top: 15px;
  left: 0;
  right: 0;
  height: 2px;
  background-color: #cce5ff;
  z-index: 0;
  transform: translateY(-50%);
  /* Tính toán để line chỉ chạy từ center icon đầu đến center icon cuối */
  margin-left: calc(100% / (2 * var(--step-count, 3))); /* 50% của width một step */
  margin-right: calc(100% / (2 * var(--step-count, 3))); /* 50% của width một step */
}

.step {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}

.circle {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 2; /* Đảm bảo icon nằm trên line */
  background-color: #fff; /* Tạo background để che line */
  border-radius: 50%;
  padding: 2px; /* Tạo khoảng trống xung quanh icon */
}

.label {
  margin-top: 8px;
  font-size: 14px;
  color: #444;
  text-align: center;
}

.button-sticky-footer {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15), /* bóng dưới */
              -4px 0 10px rgba(0, 0, 0, 0.05), /* bóng trái */
              4px 0 10px rgba(0, 0, 0, 0.05);  /* bóng phải */
}

/* Approach với CSS Variables cho dynamic steps */
.timeline-steps[data-steps="2"]::before {
    top: 15px;
  margin-left: 25%; /* 100% / (2 * 2) */
  margin-right: 25%;
}

.timeline-steps[data-steps="3"]::before {
    top: 15px;
  margin-left: calc(100% / 6); /* 100% / (2 * 3) */
  margin-right: calc(100% / 5.8);
}

.timeline-steps[data-steps="4"]::before {
    top: 15px;
  margin-left: 12.5%; /* 100% / (2 * 4) */
  margin-right: 12.5%;
}

/* Cách khác: Sử dụng flexbox spacing */
.timeline-steps-flex {
  display: flex;
  justify-content: space-between;
  position: relative;
}

.timeline-steps-flex::before {
  content: '';
  position: absolute;
  top: 15px;
  left: 12.5%; /* Adjust based on icon size */
  right: 12.5%; /* Adjust based on icon size */
  height: 2px;
  background-color: #cce5ff;
  z-index: 0;
  transform: translateY(-50%);
}



.radio-container {
    display: flex;
    align-items: center;
    gap: 40px; /* Khoảng cách giữa các radio button */
    padding: 20px 0;
}

.form-check {
    display: flex;
    align-items: center;
    position: relative;
}

/* Ẩn radio button mặc định */
.form-check-input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Tạo custom radio button */
.form-check-label {
    position: relative;
    padding-left: 30px;
    cursor: pointer;
    font-size: 16px;
    color: #333;
    user-select: none;
}

/* Tạo vòng tròn bên ngoài */
.form-check-label::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    border: 2px solid #007bff;
    border-radius: 50%;
    background-color: white;
    transition: all 0.2s ease;
}

/* Tạo chấm tròn bên trong khi được chọn */
.form-check-label::after {
    content: '';
    position: absolute;
    left: 5px;
    top: 50%;
    transform: translateY(-50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #007bff;
    opacity: 0;
    transition: opacity 0.2s ease;
}

/* Hiển thị chấm tròn khi được chọn */
.form-check-input:checked + .form-check-label::after {
    opacity: 1;
}

/* Hover effect */
.form-check-label:hover::before {
    border-color: #0056b3;
}

/* Focus effect */
.form-check-input:focus + .form-check-label::before {
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}
::ng-deep .custom-checkbox .dx-checkbox-text {
  font-size: 14px;
}